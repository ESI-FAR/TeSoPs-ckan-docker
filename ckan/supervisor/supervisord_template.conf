; ===============================
; ckan harvester
; ===============================

[unix_http_server]
file=/var/run/supervisor.sock   ; (the path to the socket file)
chmod=0700                       ; sockef file mode (default 0700)
user=ckan

[supervisord]
nodaemon=true
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
redirect_stderr=true
logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
childlogdir=/var/log/supervisor            ; ('AUTO' child log dir, default $TEMP)
user=root

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket
user=ckan

[program:ckan_gather_consumer]
; {{ put env vars here }} ;
command=/usr/local/bin/ckan --config=/srv/app/ckan.ini harvester gather-consumer
directory=/srv/app
user=ckan

numprocs=1
process_name=%(program_name)s-%(process_num)02d
autostart=false
autorestart=true
startsecs=10
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
redirect_stderr=true

[program:ckan_fetch_consumer]
; {{ put env vars here }} ;
command=/usr/local/bin/ckan --config=/srv/app/ckan.ini harvester fetch-consumer
directory=/srv/app
user=ckan

numprocs=1
process_name=%(program_name)s-%(process_num)02d
autostart=false
autorestart=true
startsecs=10

stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
redirect_stderr=true


[program:ckan]
; {{ put env vars here }} ;
command=/srv/app/start_ckan_development.sh
directory=/srv/app
user=ckan

numprocs=1
process_name=%(program_name)s-%(process_num)02d
autostart=true
autorestart=true
startsecs=10

stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
redirect_stderr=true


[program:change_socket_owner]
; FIXME are there more secure ways to allow
; "ckan" user to interact with supervisor?
command=chown ckan:ckan-sys /var/run/supervisor.sock
user=root

numprocs=1
process_name=%(program_name)s-%(process_num)02d
autostart=true
autorestart=false
startsecs=0

stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
redirect_stderr=true
