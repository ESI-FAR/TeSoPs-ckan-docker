volumes:
  ckan_storage_fed:
  pg_data_fed:
  solr_data_fed:
  pip_cache_fed:
  site_packages_fed:
  local_bin_fed:
  home_dir_fed:

services:

  ckan-dev_fed:
    build:
      context: ckan/
      dockerfile: Dockerfile.dev
      args:
        - TZ=${TZ}
    env_file:
      - .env.federation.main
    links:
      - db_fed
      - solr_fed
      - redis_fed
    ports:
      - "0.0.0.0:5001:5000"
    volumes:
      - ckan_storage_fed:/var/lib/ckan
      - ./src_fed:/srv/app/src_extensions
      - pip_cache_fed:/root/.cache/pip
      - site_packages_fed:/usr/local/lib/python3.10/site-packages
      - local_bin_fed:/usr/local/bin
      - home_dir_fed:/srv/app/
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000"]
      interval: 60s
      timeout: 10s
      retries: 3

  datapusher_fed:
    image: ckan/ckan-base-datapusher:${DATAPUSHER_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8800"]
      interval: 60s
      timeout: 10s
      retries: 3

  db_fed:
    build:
      context: postgresql/
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - CKAN_DB_USER
      - CKAN_DB_PASSWORD
      - CKAN_DB
      - DATASTORE_READONLY_USER
      - DATASTORE_READONLY_PASSWORD
      - DATASTORE_DB
    volumes:
      - pg_data_fed:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]

  solr_fed:
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data_fed:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]

  redis_fed:
    image: redis:${REDIS_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]
